using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AlgoTest.AOC2022
{
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    namespace AlgoTest.AOC2021
    {
        [TestClass]
        public class Day5
        {
            [TestMethod]
            public void Test1()
            {
                var count = 0;
                var stack = realStack;
                var operations = realOperations;

                var stackNr = 9;
                var stacks = new List<Stack<string>>();
                for (var i = 0; i < stackNr; i++)
                {
                    stacks.Add(new Stack<string>());
                }

                for (var i = stack.Length-1; i >= 0; i--)
                {
                    for (var j = 0; j < stack[i].Length; j++)
                    {
                        if(stack[i][j] == string.Empty) continue;
                        stacks[j].Push(stack[i][j]);
                    }
                }

                for (var i = 0; i < operations.Length; i++)
                {
                    var toStack = stacks[operations[i][2]-1];
                    var fromStack = stacks[operations[i][1]-1];
                    for (var j = 0; j < operations[i][0]; j++)
                    {
                        toStack.Push(fromStack.Pop());
                    }
                }

                var cratesOnTop = "";
                for (var i = 0; i < stackNr; i++)
                {
                    cratesOnTop += stacks[i].Pop();
                }

                Assert.AreEqual("TQRFCBSJJ", cratesOnTop);
            }

            [TestMethod]
            public void Test2()
            {
                var count = 0;
                var stack = realStack;
                var operations = realOperations;

                var stackNr = 9;
                var stacks = new List<Stack<string>>();
                for (var i = 0; i < stackNr; i++)
                {
                    stacks.Add(new Stack<string>());
                }

                for (var i = stack.Length - 1; i >= 0; i--)
                {
                    for (var j = 0; j < stack[i].Length; j++)
                    {
                        if (stack[i][j] == string.Empty) continue;
                        stacks[j].Push(stack[i][j]);
                    }
                }

                for (var i = 0; i < operations.Length; i++)
                {
                    var toStack = stacks[operations[i][2] - 1];
                    var fromStack = stacks[operations[i][1] - 1];
                    var list = new List<string>();
                    for (var j = 0; j < operations[i][0]; j++)
                    {
                        list.Add(fromStack.Pop());
                    }

                    for (int j = list.Count-1; j >=0; j--)
                    {
                        toStack.Push(list[j]);
                    }
                }

                var cratesOnTop = "";
                for (var i = 0; i < stackNr; i++)
                {
                    cratesOnTop += stacks[i].Pop();
                }

                Assert.AreEqual("RMHFJNVFP", cratesOnTop);
            }

            private string[][] realStack = new[]
            {
                new []{"H", "",  "",  "",  "",  "Z",  "",  "", "J"},
                new []{"L", "",  "W", "B", "",  "G",  "",  "", "R"},
                new []{"R", "",  "G", "S", "",  "J", "H",  "", "Q"},
                new []{"F", "",  "N", "T", "J", "P", "R",  "", "F"},
                new []{"B", "",  "C", "M", "R", "Q", "F", "G", "P"},
                new []{"C", "D", "F", "D", "D", "D", "T", "M", "G"},
                new []{"J", "C", "J", "J", "C", "L", "Z", "V", "B"},
                new []{"M", "Z", "H", "P", "N", "W", "P", "L", "C"},
            };

            private int[][] realOperations = new[]
            {
                new []{3,2,1},
new []{8,6,4},
new []{4,8,2},
new []{3,1,9},
new []{1,2,4},
new []{3,7,5},
new []{3,9,2},
new []{3,3,5},
new []{1,5,1},
new []{5,1,8},
new []{2,1,8},
new []{3,7,3},
new []{1,8,9},
new []{6,9,8},
new []{3,8,7},
new []{7,8,9},
new []{2,5,9},
new []{2,2,9},
new []{3,3,7},
new []{2,8,3},
new []{7,4,8},
new []{3,4,1},
new []{4,8,6},
new []{4,6,1},
new []{8,1,2},
new []{1,1,4},
new []{3,5,1},
new []{8,9,8},
new []{4,3,1},
new []{5,5,3},
new []{2,7,1},
new []{1,7,4},
new []{1,7,2},
new []{3,3,5},
new []{3,9,1},
new []{9,8,1},
new []{2,9,7},
new []{1,8,5},
new []{4,5,3},
new []{1,3,4},
new []{1,9,6},
new []{1,6,9},
new []{7,4,9},
new []{1,7,3},
new []{1,8,2},
new []{8,2,1},
new []{4,3,5},
new []{2,9,6},
new []{2,6,2},
new []{2,4,9},
new []{8,9,2},
new []{3,7,9},
new []{1,3,5},
new []{2,3,8},
new []{9,2,1},
new []{1,8,7},
new []{4,2,9},
new []{4,5,6},
new []{1,8,9},
new []{27,1,2},
new []{1,6,4},
new []{3,6,4},
new []{7,9,8},
new []{4,4,1},
new []{9,2,6},
new []{2,1,9},
new []{6,1,3},
new []{1,5,3},
new []{3,3,5},
new []{3,5,3},
new []{3,3,1},
new []{4,6,7},
new []{3,9,2},
new []{1,6,4},
new []{4,3,5},
new []{3,6,5},
new []{1,6,2},
new []{15,2,3},
new []{5,5,9},
new []{13,3,9},
new []{2,5,7},
new []{1,4,2},
new []{3,3,7},
new []{11,2,7},
new []{7,9,5},
new []{3,5,7},
new []{6,8,9},
new []{4,1,2},
new []{6,1,6},
new []{3,5,1},
new []{1,8,2},
new []{4,2,9},
new []{1,5,7},
new []{6,7,6},
new []{18,7,5},
new []{1,7,1},
new []{8,9,5},
new []{1,2,6},
new []{15,5,6},
new []{6,5,3},
new []{4,3,6},
new []{26,6,5},
new []{2,1,7},
new []{4,5,9},
new []{8,5,7},
new []{3,7,9},
new []{14,9,8},
new []{7,5,2},
new []{4,2,1},
new []{5,1,9},
new []{12,5,3},
new []{5,8,5},
new []{14,3,2},
new []{1,5,2},
new []{10,2,6},
new []{7,9,6},
new []{6,8,6},
new []{1,2,7},
new []{2,9,7},
new []{2,8,6},
new []{6,2,7},
new []{1,1,8},
new []{15,6,2},
new []{1,6,9},
new []{1,5,9},
new []{1,9,6},
new []{2,2,4},
new []{3,9,5},
new []{5,5,3},
new []{3,3,6},
new []{6,2,7},
new []{1,5,9},
new []{8,6,9},
new []{2,6,7},
new []{3,2,4},
new []{9,6,7},
new []{17,7,5},
new []{1,8,4},
new []{7,9,3},
new []{12,5,8},
new []{3,5,2},
new []{4,7,8},
new []{2,5,7},
new []{1,7,9},
new []{8,3,7},
new []{17,7,5},
new []{3,2,5},
new []{1,3,6},
new []{10,5,4},
new []{5,2,7},
new []{1,4,2},
new []{3,9,8},
new []{7,7,2},
new []{5,5,1},
new []{14,4,9},
new []{3,9,8},
new []{1,6,9},
new []{2,1,4},
new []{2,8,5},
new []{16,8,6},
new []{1,6,2},
new []{11,9,2},
new []{2,7,5},
new []{1,1,6},
new []{11,2,9},
new []{4,2,8},
new []{9,5,3},
new []{1,4,2},
new []{2,1,8},
new []{1,2,9},
new []{2,4,3},
new []{8,6,9},
new []{16,9,3},
new []{16,3,2},
new []{17,2,6},
new []{1,9,3},
new []{1,2,5},
new []{1,9,4},
new []{3,2,8},
new []{1,9,1},
new []{1,9,6},
new []{7,3,1},
new []{5,3,5},
new []{3,8,3},
new []{2,3,4},
new []{6,8,4},
new []{7,6,4},
new []{3,6,7},
new []{3,8,9},
new []{3,5,2},
new []{3,1,3},
new []{1,4,8},
new []{3,5,1},
new []{13,4,7},
new []{14,6,7},
new []{6,1,9},
new []{3,9,6},
new []{1,8,7},
new []{1,8,7},
new []{20,7,3},
new []{1,8,9},
new []{1,1,9},
new []{1,1,5},
new []{1,4,6},
new []{14,3,9},
new []{1,2,6},
new []{3,7,6},
new []{6,3,2},
new []{1,3,8},
new []{2,7,3},
new []{7,6,3},
new []{12,3,1},
new []{1,8,2},
new []{1,4,9},
new []{1,5,6},
new []{1,6,4},
new []{1,4,2},
new []{2,2,3},
new []{16,9,7},
new []{3,6,7},
new []{6,9,4},
new []{4,4,7},
new []{6,1,8},
new []{2,3,6},
new []{3,1,9},
new []{3,2,3},
new []{3,3,8},
new []{5,2,8},
new []{2,7,8},
new []{3,1,5},
new []{1,4,3},
new []{2,9,8},
new []{1,6,8},
new []{2,9,1},
new []{15,7,1},
new []{1,6,5},
new []{10,1,5},
new []{1,4,1},
new []{2,1,6},
new []{9,7,8},
new []{27,8,3},
new []{1,6,1},
new []{1,8,5},
new []{5,5,6},
new []{12,3,1},
new []{3,7,1},
new []{7,5,1},
new []{1,6,4},
new []{3,6,9},
new []{1,4,2},
new []{2,6,5},
new []{1,7,6},
new []{1,9,2},
new []{2,5,6},
new []{2,6,5},
new []{3,1,3},
new []{19,3,1},
new []{2,2,9},
new []{42,1,7},
new []{4,9,7},
new []{1,6,8},
new []{1,8,5},
new []{2,1,9},
new []{3,5,7},
new []{27,7,4},
new []{1,1,4},
new []{3,9,2},
new []{18,4,9},
new []{2,5,3},
new []{1,7,1},
new []{2,3,4},
new []{8,7,5},
new []{15,9,3},
new []{1,9,7},
new []{3,7,2},
new []{2,7,2},
new []{2,5,3},
new []{1,1,5},
new []{1,9,1},
new []{1,3,1},
new []{1,4,3},
new []{8,7,3},
new []{8,2,4},
new []{1,9,6},
new []{23,3,9},
new []{1,9,6},
new []{2,6,8},
new []{1,8,6},
new []{1,5,3},
new []{7,4,8},
new []{7,5,7},
new []{2,8,3},
new []{1,1,8},
new []{3,7,4},
new []{5,4,3},
new []{1,1,8},
new []{3,3,1},
new []{8,9,7},
new []{3,8,4},
new []{1,6,2},
new []{5,8,7},
new []{6,3,1},
new []{1,2,9},
new []{7,7,9},
new []{4,1,9},
new []{2,4,2},
new []{1,4,9},
new []{1,1,6},
new []{8,4,8},
new []{4,1,5},
new []{3,5,2},
new []{2,2,5},
new []{2,5,6},
new []{1,3,7},
new []{2,6,4},
new []{1,5,7},
new []{1,6,9},
new []{1,4,1},
new []{6,9,2},
new []{8,9,7},
new []{4,7,3},
new []{4,8,3},
new []{3,8,3},
new []{8,3,5},
new []{1,1,7},
new []{11,9,7},
new []{5,2,7},
new []{1,8,1},
new []{3,2,3},
new []{1,1,4},
new []{1,2,5},
new []{20,7,8},
new []{7,7,9},
new []{4,4,7},
new []{3,9,4},
new []{5,7,4},
new []{7,4,7},
new []{4,9,2},
new []{1,4,3},
new []{4,3,5},
new []{2,5,8},
new []{4,5,2},
new []{5,2,6},
new []{2,6,3},
new []{22,8,5},
new []{13,7,9},
new []{11,9,3},
new []{2,6,8},
new []{7,3,1},
new []{18,5,2},
new []{1,6,4},
new []{1,4,9},
new []{2,8,5},
new []{2,9,1},
new []{9,3,1},
new []{4,5,6},
new []{2,6,7},
new []{3,9,5},
new []{10,5,8},
new []{6,8,7},
new []{3,8,1},
new []{6,2,3},
new []{1,9,6},
new []{5,3,4},
new []{4,1,4},
new []{17,1,5},
new []{12,2,7},
new []{1,3,6},
new []{16,5,8},
new []{3,5,6},
new []{9,8,3},
new []{8,8,4},
new []{7,4,1},
new []{5,1,4},
new []{4,3,7},
new []{14,7,3},
new []{6,4,8},
new []{9,7,4},
new []{5,6,1},
new []{1,7,1},
new []{1,6,7},
new []{16,4,5},
new []{1,4,2},
new []{1,7,5},
new []{2,1,7},
new []{2,7,4},
new []{4,1,6},
new []{13,5,6},
new []{5,6,3},
new []{22,3,2},
new []{1,4,7},
new []{4,5,4},
new []{1,7,6},
new []{5,8,5},
new []{2,3,1},
new []{13,6,1},
new []{6,1,4},
new []{1,8,1},
new []{6,1,4},
new []{1,5,4},
new []{7,4,7},
new []{3,1,5},
new []{2,5,7},
new []{5,5,1},
new []{8,7,4},
new []{1,6,4},
new []{1,7,4},
new []{9,2,7},
new []{8,7,6},
new []{5,6,4},
new []{1,7,4},
new []{2,4,9},
new []{2,6,1},
new []{8,2,6},
new []{9,1,8},
new []{9,6,2},
new []{1,1,8},
new []{6,8,4},
new []{2,9,7},
new []{2,7,9},
new []{15,2,8},
new []{18,4,2},
new []{14,4,5},
new []{10,2,4},
new []{9,2,6},
new []{1,9,3},
new []{1,3,1},
new []{6,5,8},
new []{3,4,9},
new []{2,2,1},
new []{1,1,6},
new []{3,9,7},
new []{22,8,6},
new []{1,8,9},
new []{2,1,5},
new []{5,5,4},
new []{2,5,8},
new []{2,8,7},
new []{1,9,7},
new []{1,5,8},
new []{1,9,8},
new []{15,6,4},
new []{2,5,2},
new []{11,4,6},
new []{5,4,1},
new []{5,4,2},
new []{2,1,5},
new []{6,2,8},
new []{11,6,3},
new []{12,6,8},
new []{1,3,9},
new []{3,3,2},
new []{6,4,2},
new []{2,5,8},
new []{5,7,2},
new []{11,8,4},
new []{1,7,4},
new []{1,9,6},
new []{7,2,1},
new []{3,6,5},
new []{2,5,3},
new []{1,5,9},
new []{3,4,9},
new []{4,9,1},
new []{4,3,6},
new []{3,4,8},
new []{3,8,9},
new []{2,8,2},
new []{9,8,7},
new []{2,3,1},
new []{2,3,2},
new []{1,3,6},
new []{2,9,1},
new []{8,7,5},
new []{7,2,7},
new []{2,8,9},
new []{4,6,5},
new []{13,1,5},
new []{4,1,8},
new []{3,9,3},
new []{12,5,9},
new []{3,8,9},
new []{1,8,4},
new []{3,2,7},
new []{3,3,7},
new []{1,9,2},
new []{4,6,4},
new []{6,5,6},
new []{2,7,3},
new []{2,2,1},
new []{5,6,5},
new []{1,1,7},
new []{9,5,4},
new []{10,9,6},
new []{1,2,6},
new []{12,7,6},
new []{1,7,4},
new []{23,6,1},
new []{10,4,3},
new []{16,1,5},
new []{5,1,2},
new []{6,3,7},
new []{5,4,8},
            };

            string[][] testStack = new[]
            {
                new []{"","D"},
                new []{ "N", "C"},
                new []{ "Z", "M", "P"},
            };
            
            int[][] testOperations = new[]
            {
                new []{1,2,1},
                new []{3,1,3},
                new []{2,2,1},
                new []{1,1,2},
            };
        }
    }

}
